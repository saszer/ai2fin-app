const axios = require('axios');

async function clearCategorizationCache() {
  console.log('üßπ Clearing Categorization Cache Data');
  console.log('=====================================');
  
  try {
    // First login to get token
    console.log('üîê Logging in...');
    const loginResponse = await axios.post('http://localhost:3001/api/auth/login', {
      email: 'test@example.com',
      password: 'password123'
    });
    const token = loginResponse.data.token;
    console.log('‚úÖ Login successful');
    
    // Clear ALL cache entries for this user
    console.log('\nüßπ Clearing cache data...');
    const clearResponse = await axios.delete('http://localhost:3001/api/intelligent-categorization/cache?type=all', {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    console.log('‚úÖ Cache clearing response:', clearResponse.data);
    console.log(`üóëÔ∏è  Deleted ${clearResponse.data.deletedCount} cache entries`);
    
    if (clearResponse.data.deletedCount > 0) {
      console.log('\nüéØ Cache cleared successfully!');
      console.log('üìù What this means:');
      console.log('   ‚Ä¢ Next categorization will make fresh OpenAI API calls');
      console.log('   ‚Ä¢ You should see Method: AI with OpenAI calls > 0');
      console.log('   ‚Ä¢ Then running again should show Method: Cache with calls = 0');
      console.log('   ‚Ä¢ This will test the smart mapping logic properly');
    } else {
      console.log('\n ‚ÑπÔ∏è No cache entries found to delete');
      console.log('üìù This could mean:');
      console.log('   ‚Ä¢ Cache was already empty');
      console.log('   ‚Ä¢ Different user account');
      console.log('   ‚Ä¢ Transactions were never cached');
    }
    
    console.log('\nüß™ Next steps to test:');
    console.log('1. Open AI Categorization Analysis modal');
    console.log('2. First run should show: Method=AI, OpenAI calls>0');
    console.log('3. Second run should show: Method=Cache, OpenAI calls=0');
    
  } catch (error) {
    console.error('‚ùå Failed to clear cache:', error.message);
    if (error.response) {
      console.error('Response status:', error.response.status);
      console.error('Response data:', error.response.data);
    }
  }
}

clearCategorizationCache(); 